// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  name      String?
  password  String
  role      Role       @default(USER)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  templates Template[]
  forms     Form[] 
  allowedTemplates Template[] @relation("TemplateAccess")
}

model Template {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  topic       Topic      @default(OTHER)
  imageUrl    String?
  isPublic    Boolean    @default(true)
  author      User       @relation(fields: [authorId], references: [id])
  authorId    Int
  questions   Question[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  forms       Form[] 
  tags        Tag[]
  allowedUsers User[] @relation("TemplateAccess")
}

model Question {
  id         Int      @id @default(autoincrement())
  title      String
  type       String
  order      Int
  template   Template @relation(fields: [templateId], references: [id])
  templateId Int
  answers    Answer[] 
}

enum Role {
  USER
  ADMIN
}

enum Topic {
  EDUCATION
  QUIZ
  POLL
  OTHER
}

model Form {
  id         Int      @id @default(autoincrement())
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId Int
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  createdAt  DateTime @default(now())
  answers    Answer[]
}

model Answer {
  id         Int      @id @default(autoincrement())
  form       Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  formId     Int
  question   Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId Int
  value      String
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String     @unique 
  templates Template[]
}